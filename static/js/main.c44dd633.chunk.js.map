{"version":3,"sources":["components/counter.jsx","components/description.jsx","components/counters.jsx","index.js"],"names":["Counter","state","value","props","currentState","storedValue_1","storedValue_2","handleIncrement","setState","parseFloat","handleDelete","handleMultiply","chooseOperator","Math","sqrt","align","this","children","className","style","backgroundColor","InputGroup","paddingInline","Input","placeholder","border","onChange","e","storedValue","target","onClick","Component","Description","Counters","counters","id","counterId","console","log","map","counter","onDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c44dd633.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react';\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\n\nclass Counter extends Component {\n    state = {\n        value : this.props.value,\n        currentState : 'operator',\n        storedValue_1 : 0,\n        storedValue_2 : 0\n    };\n    \n    handleIncrement = () => {\n        this.setState( {value: parseFloat(this.state.value) + parseFloat(1) } );\n    };\n\n    handleDelete = () => {\n        this.setState( {value: this.state.value = 0} );\n    };\n\n    handleMultiply = () => {\n        this.setState( {value: this.state.value = this.state.value * 2} );\n    };\n\n    chooseOperator = () => {\n        switch (this.state.currentState) {\n            case '+':\n                return parseFloat(this.state.storedValue_1) + parseFloat(this.state.storedValue_2);\n            case '-':\n                return parseFloat(this.state.storedValue_1) - parseFloat(this.state.storedValue_2);\n            case 'x':\n                return parseFloat(this.state.storedValue_1) * parseFloat(this.state.storedValue_2);\n            case '/':\n                return parseFloat(this.state.storedValue_1) / parseFloat(this.state.storedValue_2);\n            case '&#8730;':\n                return Math.sqrt(parseFloat(this.state.storedValue_1));\n            default:\n                return \"result\";\n        }\n    };\n\n    render () {\n        return (\n            <div align='center'>\n                {this.props.children}\n                <h3><span className = \"badge badge-primary\" style= {{backgroundColor: '#282c34'}}>{this.state.value}</span></h3>\n                <InputGroup style = {{paddingInline: \"50px\"}}>\n                    {/* <InputGroupAddon addonType = \"prepend\">\n                        <InputGroupText>Value:</InputGroupText>\n                    </InputGroupAddon> */}\n                    <Input placeholder=\"Input 1st value here\" className = 'm-2' style = {{border: '2px solid'}} onChange = {(e) => {this.setState( {storedValue: this.state.storedValue_1 = e.target.value} )}}></Input>                    \n                </InputGroup>\n                <InputGroup style = {{paddingInline: \"50px\"}}>\n                    <Input placeholder=\"Input 2nd value here\" className = 'm-2' style = {{border: '2px solid'}} onChange = {(e) => {this.setState( {storedValue: this.state.storedValue_2 = e.target.value} )}}></Input>\n                </InputGroup>\n                <br></br>\n                <div>\n                    {(this.state.storedValue_1 === 0) ? \"\": this.state.storedValue_1} {(this.state.currentState === \"operator\") ? \"\": this.state.currentState} {(this.state.storedValue_2 === 0) ? \"\": this.state.storedValue_2} {((this.state.storedValue_1 === 0) && (this.state.storedValue_2 === 0)) ? \"\": \"=\"} {(this.chooseOperator() === \"result\") ? \"\": this.chooseOperator()}\n                </div>\n                <br></br>\n                <button className = \"btn btn-outline-primary m-4\" onClick = {() => {this.setState( {currentState: this.state.currentState = \"+\"} )}}>+</button>\n                <button className = \"btn btn-outline-success m-4\" onClick = {() => {this.setState( {currentState: this.state.currentState = \"-\"} )}}>-</button>\n                <button className = \"btn btn-outline-warning m-4\" onClick = {() => {this.setState( {currentState: this.state.currentState = \"x\"} )}}>x</button>\n                <button className = \"btn btn-outline-info m-4\" onClick = {() => {this.setState( {currentState: this.state.currentState = \"/\"} )}}>/</button>\n                <br></br>\n                <button className = \"btn btn-sm btn-primary m-2\" onClick = {() => {this.setState( {value: this.state.value = this.chooseOperator()} )}}>Submit</button>\n                <button className = \"btn btn-success btn-sm m-2\" onClick = {() => {this.handleIncrement()}}>Increment</button>\n                <button className = \"btn btn-warning btn-sm m-2\" onClick = {() => {this.handleDelete()}}>Reset</button>\n                <button className = \"btn btn-info btn-sm m-2\" onClick = {() => {this.handleMultiply()}}>Multiply by 2!</button>\n            </div>\n        );\n        \n    };\n}\n\nexport default Counter;","import React, { Component } from 'react';\n\nclass Description extends Component {\n    render () {\n        return (\n            <div align = 'center'>\n                <h1>Shaohang's Calculator</h1>\n            </div>\n        );\n    };\n}\n\nexport default Description;","import React, { Component } from 'react';\nimport Counter from './counter';\nimport Description from './description';\n\nclass Counters extends Component {\n    state = {\n        counters: [\n            { id: 1, value: 0}\n        ]\n    };\n\n    handleDelete = (counterId) => {\n        console.log(this.state.counters[counterId]);\n    };\n\n    render() {\n        return (\n        <div>\n            <h4><Description/></h4>\n            { this.state.counters.map(counter => \n            <Counter key={counter.id} value={counter.value} onDelete = {this.handleDelete(counter.id)}></Counter> )}\n        </div> );\n    }\n}\n\nexport default Counters;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Counters from './components/counters';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counters />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}